---
title: "Current projects"
output:
  html_document:
    code_folding: hide
    toc: false
    toc_float: true
    collapsed: true
    number_sections: false
    toc_depth: 3
    
---
<style>
  .nav-pills>li>a:hover, .nav-pills>li>a:focus, .nav-pills>li.active>a,     .nav-pills>li.active>a:hover, .nav-pills>li.active>a:focus{
     background-color: CadetBlue; 
     }
</style>  <!-- https://www.angularfix.com/2021/10/how-to-change-tabset-colors-without.html -->

```{r setup, include=FALSE}
    knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
```
 
# {.tabset .tabset-fade .tabset-pills}

## Project 1

Last compiled: `r Sys.Date()`

This will be a project description. In here we can also include demos and interactive elements. 

### Interactive Plots
We can include basic interactive plots easy to make with plotly. 
We can also create a ggplot and plotlyfy it, making it interactive:

```{r, out.width=300, out.height=300}
p <- ggplot(fortify(forecast::gold), aes(x, y)) + geom_line()
p <- ggplotly(p)
p <- p %>% layout(dragmode = "pan")
p

```

We can include different types of interactive tables and plots (html widgets)

```{r, out.height=200, out.width=200}
library(dygraphs)
dygraph(nhtemp, main = "") %>% 
dyRangeSelector(dateWindow = c("1920-01-01", "1960-01-01"))

```

There are packages available for specific interactive plots

```{r, out.height=400, out.width=400}
library(threejs)
z <- seq(-10, 10, 0.01)
x <- cos(z)
y <- sin(z)
scatterplot3js(x,y,z, color=rainbow(length(z)))

```

### Animations

We can include simple animations , very easy to make with plotly 

```{r, out.height=600, out.width=600}
library(plotly)

accumulate_by <- function(dat, var) {
  var <- lazyeval::f_eval(var, dat)
  lvls <- plotly:::getLevels(var)
  dats <- lapply(seq_along(lvls), function(x) {
    cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
  })
  dplyr::bind_rows(dats)
}

df <- txhousing 
fig <- df %>%
  filter(year > 2005, city %in% c("Abilene", "Bay Area"))
fig <- fig %>% accumulate_by(~date)


fig <- fig %>%
  plot_ly(
    x = ~date, 
    y = ~median,
    split = ~city,
    frame = ~frame, 
    type = 'scatter',
    mode = 'lines', 
    line = list(simplyfy = F)
  )
fig <- fig %>% layout(
  xaxis = list(
    title = "Date",
    zeroline = F
  ),
  yaxis = list(
    title = "Median",
    zeroline = F
  )
) 
fig <- fig %>% animation_opts(
  frame = 100, 
  transition = 0, 
  redraw = FALSE
)
fig <- fig %>% animation_slider(
  hide = T
)
fig <- fig %>% animation_button(
  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
)

fig
```
 
Other example of plotly

```{r, out.height=300, out.width=300}
library(plotly)
# volcano is a numeric matrix that ships with R
fig <- plot_ly(z = ~volcano)
fig <- fig %>% add_surface()

fig

```

## Project 2
Last compiled: `r Sys.Date()`

blah blah

### Subsection 1

# {-}
   